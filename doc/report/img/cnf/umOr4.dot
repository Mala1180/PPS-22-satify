digraph BinaryTree {

    graph [bgcolor="transparent", fontcolor=white];

    subgraph before { 

        node [fontname="monospace", shape=box];

        And11 [label="And"];
            Or11 [label="Or"];
                A11 [label="A"];
                Or12 [label="Or"];
                    Not11 [label="Not"];
                    B11 [label="B"];
                    C11 [label="C"];
        
            Or13 [label="Or"];
                A12 [label="A"];
                C12 [label="C"];

        And11 -> Or11;
        Or11 -> A11;
        Or11 -> Or12;
        Or12 -> Not11;
        Not11 -> B11;
        Or12 -> C11;
        And11 -> Or13;
        Or13 -> A12;
        Or13 -> C12;
    }



    subgraph invisible_space1 {
        // Invisible nodes with no content and shape=point
        invisible_node_11 [shape=point, width=0];
        invisible_node_22 [shape=point, width=0];
        invisible_node_33 [shape=point, width=0];
        invisible_node_11 -> invisible_node_22 [style=invis];
        invisible_node_11 -> invisible_node_33 [style=invis];
    }

    subgraph invisible_space3 {
        // Invisible nodes with no content and shape=point
        invisible_node_111 [shape=point, width=0];
        invisible_node_222 [shape=point, width=0];
        invisible_node_333 [shape=point, width=0];
        invisible_node_111 -> invisible_node_222 [style=invis];
        invisible_node_111 -> invisible_node_33 [style=invis];
    }

    subgraph after { 

        node [fontname="monospace", shape=box];

        And21 [label="And"];
        True21 [label="True"];
        Or21 [label="Or"];
                A21 [label="A"];
                C21 [label="C"];

        And21 -> True21;
        And21 -> Or21;
        Or21 -> A21;
        Or21 -> C21;

    }



}