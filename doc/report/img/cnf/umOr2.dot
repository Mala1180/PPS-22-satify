digraph BinaryTree {

    graph [bgcolor="transparent", fontcolor=white];

    subgraph before { 

        node [fontname="monospace", shape=box];

        And1 [label="And"];
        Or1 [label="Or"];
        A1 [label="A"];
        Or2 [label="Or"];
        B1 [label="B"];
        Not [label="Not"];
        C1 [label="C"];
        C2 [label="C"];

        And1 -> Or1;
        Or1 -> A1;
        Or1 -> Or2;
        Or2 -> Not;
        Not -> B1;
        Or2 -> C1;
        And1 -> C2;
    }

    subgraph invisible_space {
        // Invisible nodes with no content and shape=point
        invisible_node_1 [shape=point, width=0];
        invisible_node_2 [shape=point, width=0];
        invisible_node_3 [shape=point, width=0];
        invisible_node_1 -> invisible_node_2 [style=invis];
        invisible_node_1 -> invisible_node_3 [style=invis];
    }

    subgraph after {

        node [fontname="monospace", shape=box];

        And11[label="And"];
        True [label="True"];
        C11[label="C"];
        
        And11 -> True;
        And11 -> C11;

    }


}